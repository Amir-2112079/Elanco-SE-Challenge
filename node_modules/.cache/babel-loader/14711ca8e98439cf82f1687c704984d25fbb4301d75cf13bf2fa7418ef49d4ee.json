{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\Contents\\\\Resources.js\",\n  _s = $RefreshSig$();\nimport '../Css/Resources.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Resources() {\n  _s();\n  //whether the data is being loaded from the API or not \n  const [loading, setLoading] = useState(false);\n\n  //an array that returns the data from API \n  const [resources, setResources] = useState([]);\n\n  //can be used to select specifc resources  \n  const [selectedResources, setSelectedResources] = useState(null);\n\n  //shows the details of the selected resources \n  const [resourcesDetail, setResourcesDetail] = useState(null);\n\n  //indicates to whether display the the list of resources or just the details \n  const [showApp, setShowApp] = useState(true);\n\n  //async function that sends request to get the list of resources\n  const displayResources = async () => {\n    setLoading(true);\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/resources');\n    setResources(response.data);\n    setLoading(false);\n  };\n  //async function that sends request to get the details of the selected resources\n  const chooseResources = async application => {\n    setSelectedResources(application);\n    setLoading(true);\n    const response = await axios.get(`https://engineering-task.elancoapps.com/api/resources/${application}`);\n    setResourcesDetail(response.data);\n    setLoading(false);\n    setShowApp(false);\n  };\n\n  //allows to clear the selected resources, and load the orignal page \n  const goBack = () => {\n    setSelectedResources(null);\n    setResources([]);\n    setShowApp(true);\n  };\n  const sort = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Resources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), showApp && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: displayResources,\n      children: \"Load Resources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this) :\n    //also, if showApp is true it renders a list of resources and a button to view the deatials of each resources.\n    //.map allows us to iterate through the array\n    showApp ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: resources.map(resource => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [resource, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => chooseResources(resource),\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this) :\n    /*#__PURE__*/\n    //if showApp is false, it dislays the details of the selected resources and a message as well as a go back button\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedResources\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: goBack,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 36\n      }, this) : resourcesDetail ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(resourcesDetail, null, 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading application information...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Resources, \"T/Czl6e9sGuuKxcKx0waJMlVwHk=\");\n_c = Resources;\n;\nexport default Resources;\nvar _c;\n$RefreshReg$(_c, \"Resources\");","map":{"version":3,"names":["React","useState","axios","Resources","loading","setLoading","resources","setResources","selectedResources","setSelectedResources","resourcesDetail","setResourcesDetail","showApp","setShowApp","displayResources","response","get","data","chooseResources","application","goBack","sort","map","resource","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/Contents/Resources.js"],"sourcesContent":["import '../Css/Resources.css';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Resources() {\r\n    //whether the data is being loaded from the API or not \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //an array that returns the data from API \r\n    const [resources, setResources] = useState([]);\r\n\r\n    //can be used to select specifc resources  \r\n    const [selectedResources, setSelectedResources] = useState(null);\r\n\r\n    //shows the details of the selected resources \r\n    const [resourcesDetail, setResourcesDetail] = useState(null);\r\n\r\n    //indicates to whether display the the list of resources or just the details \r\n    const [showApp, setShowApp] = useState(true);\r\n\r\n\r\n\r\n    //async function that sends request to get the list of resources\r\n    const displayResources = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/resources');\r\n        setResources(response.data);\r\n        setLoading(false);\r\n    };\r\n    //async function that sends request to get the details of the selected resources\r\n    const chooseResources = async (application) => {\r\n        setSelectedResources(application);\r\n        setLoading(true);\r\n        const response = await axios.get(`https://engineering-task.elancoapps.com/api/resources/${application}`);\r\n        setResourcesDetail(response.data);\r\n        setLoading(false);\r\n        setShowApp(false);\r\n    };\r\n\r\n    //allows to clear the selected resources, and load the orignal page \r\n    const goBack = () => {\r\n        setSelectedResources(null);\r\n        setResources([]);\r\n        setShowApp(true);\r\n    };\r\n\r\n\r\n    const sort = () => {\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className='main'>\r\n            <h1>Resources</h1>\r\n\r\n            {/* Render a button to retrieve data from API if showApp is true */}\r\n            {showApp && <button className='btn' onClick={displayResources}>Load Resources</button>}\r\n\r\n            {/* Renders a paragraph if loading is true */}\r\n            {loading ? <p>Loading...</p> :\r\n\r\n                //also, if showApp is true it renders a list of resources and a button to view the deatials of each resources.\r\n                //.map allows us to iterate through the array\r\n                showApp ? (\r\n                    <ul>\r\n                        {resources.map((resource) => (\r\n                            <li >\r\n                                {resource}{\" \"}\r\n                                <button className='btn' onClick={() => chooseResources(resource)}>\r\n                                    View Details\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) :\r\n\r\n                    //if showApp is false, it dislays the details of the selected resources and a message as well as a go back button\r\n                    <div>\r\n                        <h2>{selectedResources}</h2>\r\n                        <button className='btn' onClick={goBack}>Go Back</button>\r\n                        {loading ? <p>Loading...</p> :\r\n                            resourcesDetail ? (\r\n                                <div>\r\n                                    <pre>{JSON.stringify(resourcesDetail, null, 5)}</pre>\r\n                                </div>\r\n                            ) : <p>Loading application information...</p>}\r\n                    </div>\r\n            }\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Resources;"],"mappings":";;AAAA,OAAO,sBAAsB;AAC7B,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,SAAS,GAAG;EAAA;EACjB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAI5C;EACA,MAAMa,gBAAgB,GAAG,YAAY;IACjCT,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMU,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,uDAAuD,CAAC;IACzFT,YAAY,CAACQ,QAAQ,CAACE,IAAI,CAAC;IAC3BZ,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EACD;EACA,MAAMa,eAAe,GAAG,MAAOC,WAAW,IAAK;IAC3CV,oBAAoB,CAACU,WAAW,CAAC;IACjCd,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMU,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,yDAAwDG,WAAY,EAAC,CAAC;IACxGR,kBAAkB,CAACI,QAAQ,CAACE,IAAI,CAAC;IACjCZ,UAAU,CAAC,KAAK,CAAC;IACjBQ,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMO,MAAM,GAAG,MAAM;IACjBX,oBAAoB,CAAC,IAAI,CAAC;IAC1BF,YAAY,CAAC,EAAE,CAAC;IAChBM,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC;EAGD,MAAMQ,IAAI,GAAG,MAAM,CAGnB,CAAC;EAGD,oBAEI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,EAGjBT,OAAO,iBAAI;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEE,gBAAiB;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAS,EAGrFV,OAAO,gBAAG;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAI;IAExB;IACA;IACAQ,OAAO,gBACH;MAAA,UACKN,SAAS,CAACgB,GAAG,CAAEC,QAAQ,iBACpB;QAAA,WACKA,QAAQ,EAAE,GAAG,eACd;UAAQ,SAAS,EAAC,KAAK;UAAC,OAAO,EAAE,MAAML,eAAe,CAACK,QAAQ,CAAE;UAAA,UAAC;QAElE;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAEhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACD;IAAA;IAGL;IACA;MAAA,wBACI;QAAA,UAAKf;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAM,eAC5B;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAEY,MAAO;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,EACxDhB,OAAO,gBAAG;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI,GACxBM,eAAe,gBACX;QAAA,uBACI;UAAA,UAAMc,IAAI,CAACC,SAAS,CAACf,eAAe,EAAE,IAAI,EAAE,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QACnD,gBACN;QAAA,UAAG;MAAkC;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/C;EAAA;IAAA;IAAA;IAAA;EAAA,QAEX;AAEf;AAAC,GAzFQP,SAAS;AAAA,KAATA,SAAS;AAyFjB;AAED,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}