{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\Elanco-SE-Challenge\\\\src\\\\Contents\\\\Resources.js\",\n  _s = $RefreshSig$();\nimport '../Css/Resources.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Resources() {\n  _s();\n  //an array that returns the data from API \n  const [resources, setResources] = useState([]);\n\n  //can be used to select specific resources  \n  const [selectedResources, setSelectedResources] = useState(null);\n\n  //shows the details of the selected resources \n  const [resourcesDetail, setResourcesDetail] = useState(null);\n\n  //indicates to whether display the the list of resources or just the details \n  const [showApp, setShowApp] = useState(true);\n\n  //used axios to get the data from API then saved it in the setResources\n  const displayResources = () => {\n    axios.get('https://engineering-task.elancoapps.com/api/resources').then(response => {\n      setResources(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  /*\r\n  used axios to retrieve resources from the API, and then I used the resources parameter\r\n  to retrieve information for a specific resource that the user had selected, also saving \r\n  the data in resource detail, then letting showapp to false(meaning the user has clicked\r\n  on view details) and adding the data into the setSortedData array.\r\n  */\n  const chooseResources = resources => {\n    setSelectedResources(resources);\n    axios.get(`https://engineering-task.elancoapps.com/api/resources/${resources}`).then(response => {\n      setResourcesDetail(response.data);\n      setShowApp(false);\n      setSortedData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  //allows to clear the selected resources, and load the original page \n  const goBack = () => {\n    setSelectedResources(null);\n    setResources([]);\n    setShowApp(true);\n  };\n\n  //adding the initial values for the sort functions\n  const [sortOrder, setSortOrder] = useState({\n    ConsumedQuantity: 'asc',\n    Cost: 'asc'\n  });\n\n  //keeps track of the sort order e.g., are we in asc order or desc\n  const [sortedData, setSortedData] = useState(null);\n  const sortByConsumedQuantity = () => {\n    //to display to the users that what order their on \n    const order = sortOrder.ConsumedQuantity === 'asc' ? 'desc' : 'asc';\n    //creating a new array to save all the new sorted data by subtracting \"x by y\" to get the \"desc\" and \"y by x\" to get \"asc\" \n    const sorted = sortedData.sort((x, y) => {\n      return order === 'asc' ? x.ConsumedQuantity - y.ConsumedQuantity : y.ConsumedQuantity - x.ConsumedQuantity;\n    });\n    //sorted data is updated in the setSortedData\n    setSortedData(sorted);\n    //used a spread operator overwrites the current state of sort order by the new state after it is sorted into asc or desc order.\n    setSortOrder({\n      ...sortOrder,\n      ConsumedQuantity: order\n    });\n  };\n\n  //same as the previous function\n  const sortByCost = () => {\n    const order = sortOrder.Cost === 'asc' ? 'desc' : 'asc';\n    const sorted = sortedData.sort((x, y) => {\n      return order === 'asc' ? x.Cost - y.Cost : y.Cost - x.Cost;\n    });\n    setSortedData(sorted);\n    setSortOrder({\n      ...sortOrder,\n      Cost: order\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Resources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), showApp && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: displayResources,\n      children: \"Load Resources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), showApp && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: resources.map(resource => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [resource, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => chooseResources(resource),\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), selectedResources && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedResources\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: goBack,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), resourcesDetail && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rbtn\",\n          onClick: sortByConsumedQuantity,\n          children: [\"Sort by ConsumedQuantity (\", sortOrder.ConsumedQuantity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rbtn\",\n          onClick: sortByCost,\n          children: [\"Sort by Cost (\", sortOrder.Cost, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(resourcesDetail, null, 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(Resources, \"R3QnANnrRq0IhsX053FOcqGsvpk=\");\n_c = Resources;\n;\nexport default Resources;\nvar _c;\n$RefreshReg$(_c, \"Resources\");","map":{"version":3,"names":["React","useState","axios","Resources","resources","setResources","selectedResources","setSelectedResources","resourcesDetail","setResourcesDetail","showApp","setShowApp","displayResources","get","then","response","data","catch","error","console","chooseResources","setSortedData","goBack","sortOrder","setSortOrder","ConsumedQuantity","Cost","sortedData","sortByConsumedQuantity","order","sorted","sort","x","y","sortByCost","map","resource","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/Elanco-SE-Challenge/src/Contents/Resources.js"],"sourcesContent":["import '../Css/Resources.css';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Resources() {\r\n\r\n    //an array that returns the data from API \r\n    const [resources, setResources] = useState([]);\r\n\r\n    //can be used to select specific resources  \r\n    const [selectedResources, setSelectedResources] = useState(null);\r\n\r\n    //shows the details of the selected resources \r\n    const [resourcesDetail, setResourcesDetail] = useState(null);\r\n\r\n    //indicates to whether display the the list of resources or just the details \r\n    const [showApp, setShowApp] = useState(true);\r\n\r\n\r\n    //used axios to get the data from API then saved it in the setResources\r\n    const displayResources = () => {\r\n        axios.get('https://engineering-task.elancoapps.com/api/resources')\r\n            .then(response => {\r\n                setResources(response.data);\r\n            }).catch(error => {\r\n                console.error(error);\r\n            })\r\n    };\r\n\r\n    /*\r\n    used axios to retrieve resources from the API, and then I used the resources parameter\r\n    to retrieve information for a specific resource that the user had selected, also saving \r\n    the data in resource detail, then letting showapp to false(meaning the user has clicked\r\n    on view details) and adding the data into the setSortedData array.\r\n    */\r\n    const chooseResources = (resources) => {\r\n        setSelectedResources(resources);\r\n        axios.get(`https://engineering-task.elancoapps.com/api/resources/${resources}`)\r\n            .then(response => {\r\n                setResourcesDetail(response.data);\r\n                setShowApp(false);\r\n                setSortedData(response.data);\r\n            }).catch(error => {\r\n                console.error(error);\r\n            })\r\n    };\r\n\r\n\r\n    //allows to clear the selected resources, and load the original page \r\n    const goBack = () => {\r\n        setSelectedResources(null);\r\n        setResources([]);\r\n        setShowApp(true);\r\n    };\r\n\r\n\r\n    //adding the initial values for the sort functions\r\n    const [sortOrder, setSortOrder] = useState({\r\n        ConsumedQuantity: 'asc',\r\n        Cost: 'asc'\r\n    });\r\n\r\n    //keeps track of the sort order e.g., are we in asc order or desc\r\n    const [sortedData, setSortedData] = useState(null);\r\n\r\n\r\n    const sortByConsumedQuantity = () => {\r\n        //to display to the users that what order their on \r\n        const order = sortOrder.ConsumedQuantity === 'asc' ? 'desc' : 'asc';\r\n        //creating a new array to save all the new sorted data by subtracting \"x by y\" to get the \"desc\" and \"y by x\" to get \"asc\" \r\n        const sorted = sortedData.sort((x, y) => {\r\n            return order === 'asc' ? x.ConsumedQuantity - y.ConsumedQuantity : y.ConsumedQuantity - x.ConsumedQuantity;\r\n        });\r\n        //sorted data is updated in the setSortedData\r\n        setSortedData(sorted);\r\n        //used a spread operator overwrites the current state of sort order by the new state after it is sorted into asc or desc order.\r\n        setSortOrder({ ...sortOrder, ConsumedQuantity: order });\r\n    };\r\n\r\n\r\n    //same as the previous function\r\n    const sortByCost = () => {\r\n        const order = sortOrder.Cost === 'asc' ? 'desc' : 'asc';\r\n        const sorted = sortedData.sort((x, y) => {\r\n            return order === 'asc' ? x.Cost - y.Cost : y.Cost - x.Cost;\r\n        })\r\n        setSortedData(sorted);\r\n        setSortOrder({ ...sortOrder, Cost: order });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='main'>\r\n            <h1>Resources</h1>\r\n\r\n            {/* Render a button to retrieve data from API */}\r\n            {showApp && (\r\n                <button className='btn' onClick={displayResources}>\r\n                    Load Resources\r\n                </button>\r\n            )}\r\n\r\n            {/* Show resource list with details button. .map is used to return the array.\r\n             {resource}{\" \"} allows to display resources followed by a space character.*/}\r\n            {showApp && (\r\n                <ul>\r\n                    {resources.map((resource) => (\r\n                        <li>\r\n                            {resource}{\" \"}\r\n                            <button className='btn' onClick={() => chooseResources(resource)}>\r\n                                View Details\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n\r\n            {/* Show resources details */}\r\n            {selectedResources && (\r\n                <div>\r\n                    <h2>{selectedResources}</h2>\r\n                    <button className='btn' onClick={goBack}>Go Back</button>\r\n\r\n                    {/* Show sorting buttons and application details */}\r\n                    {resourcesDetail && (\r\n                        <>\r\n                            <br />\r\n                            <button className='rbtn' onClick={sortByConsumedQuantity}>\r\n                                Sort by ConsumedQuantity ({sortOrder.ConsumedQuantity})\r\n                            </button>\r\n                            <br />\r\n                            <button className='rbtn' onClick={sortByCost}>\r\n                                Sort by Cost ({sortOrder.Cost})\r\n                            </button>\r\n\r\n                            <pre>{JSON.stringify(resourcesDetail, null, 5)}</pre>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Resources;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}