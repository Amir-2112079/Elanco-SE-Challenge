{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\Contents\\\\Raw.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Raw() {\n  _s();\n  //whether the data is being loaded from the API or not \n  const [loading, setLoading] = useState(false);\n\n  //an array that returns the data from API \n  const [resources, setResources] = useState([]);\n\n  //can be used to select specifc resources  \n  const [selectedResources, setSelectedResources] = useState(null);\n\n  //indicates to whether display the the list of resources or just the details \n  const [showApp, setShowApp] = useState(true);\n\n  //async function that sends request to get the list of resources\n  const displayResources = async () => {\n    setLoading(true);\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\n    setResources(response.data);\n    setLoading(false);\n  };\n\n  //allows to clear the selected resources, and load the orignal page \n  const goBack = () => {\n    setSelectedResources(null);\n    setResources([]);\n    setShowApp(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Raw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), showApp && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: displayResources,\n      children: \"Load Raws\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this) :\n    //also, if showApp is true it renders a list of resources and a button to view the deatials of each resources.\n    //.map allows us to iterate through the array\n    showApp ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: resources.map(resource => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [resource, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this) :\n    /*#__PURE__*/\n    //if showApp is false, it dislays the details of the selected resources and a message as well as a go back button\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedResources\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: goBack,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 36\n      }, this) : resourcesDetail ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(resourcesDetail, null, 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading application information...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Raw, \"3AEv3VTigHUs05ACRGnNY8Cx85o=\");\n_c = Raw;\nexport default Raw;\nvar _c;\n$RefreshReg$(_c, \"Raw\");","map":{"version":3,"names":["React","useState","axios","Raw","loading","setLoading","resources","setResources","selectedResources","setSelectedResources","showApp","setShowApp","displayResources","response","get","data","goBack","map","resource","resourcesDetail","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/Contents/Raw.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Raw() {\r\n\r\n    //whether the data is being loaded from the API or not \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //an array that returns the data from API \r\n    const [resources, setResources] = useState([]);\r\n\r\n    //can be used to select specifc resources  \r\n    const [selectedResources, setSelectedResources] = useState(null);\r\n\r\n\r\n    //indicates to whether display the the list of resources or just the details \r\n    const [showApp, setShowApp] = useState(true);\r\n\r\n\r\n\r\n    //async function that sends request to get the list of resources\r\n    const displayResources = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setResources(response.data);\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    //allows to clear the selected resources, and load the orignal page \r\n    const goBack = () => {\r\n        setSelectedResources(null);\r\n        setResources([]);\r\n        setShowApp(true);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='main'>\r\n            <h1>Raw</h1>\r\n\r\n            {/* Render a button to retrieve data from API if showApp is true */}\r\n            {showApp && <button className='btn' onClick={displayResources}>Load Raws</button>}\r\n\r\n            {/* Renders a paragraph if loading is true */}\r\n            {loading ? <p>Loading...</p> :\r\n\r\n                //also, if showApp is true it renders a list of resources and a button to view the deatials of each resources.\r\n                //.map allows us to iterate through the array\r\n                showApp ? (\r\n                    <ul>\r\n                        {resources.map((resource) => (\r\n                            <li >\r\n                                {resource}{\" \"}\r\n\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) :\r\n\r\n                    //if showApp is false, it dislays the details of the selected resources and a message as well as a go back button\r\n                    <div>\r\n                        <h2>{selectedResources}</h2>\r\n                        <button className='btn' onClick={goBack}>Go Back</button>\r\n                        {loading ? <p>Loading...</p> :\r\n                            resourcesDetail ? (\r\n                                <div>\r\n                                    <pre>{JSON.stringify(resourcesDetail, null, 5)}</pre>\r\n                                </div>\r\n                            ) : <p>Loading application information...</p>}\r\n                    </div>\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Raw;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EAEX;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAGhE;EACA,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAI5C;EACA,MAAMW,gBAAgB,GAAG,YAAY;IACjCP,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,iDAAiD,CAAC;IACnFP,YAAY,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC3BV,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;;EAGD;EACA,MAAMW,MAAM,GAAG,MAAM;IACjBP,oBAAoB,CAAC,IAAI,CAAC;IAC1BF,YAAY,CAAC,EAAE,CAAC;IAChBI,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC;EAKD,oBAEI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,EAGXD,OAAO,iBAAI;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEE,gBAAiB;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,EAGhFR,OAAO,gBAAG;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAI;IAExB;IACA;IACAM,OAAO,gBACH;MAAA,UACKJ,SAAS,CAACW,GAAG,CAAEC,QAAQ,iBACpB;QAAA,WACKA,QAAQ,EAAE,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAGrB;IAAC;MAAA;MAAA;MAAA;IAAA,QACD;IAAA;IAGL;IACA;MAAA,wBACI;QAAA,UAAKV;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAM,eAC5B;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAEQ,MAAO;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,EACxDZ,OAAO,gBAAG;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI,GACxBe,eAAe,gBACX;QAAA,uBACI;UAAA,UAAMC,IAAI,CAACC,SAAS,CAACF,eAAe,EAAE,IAAI,EAAE,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QACnD,gBACN;QAAA,UAAG;MAAkC;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/C;EAAA;IAAA;IAAA;IAAA;EAAA,QAEX;AAEf;AAAC,GA1EQhB,GAAG;AAAA,KAAHA,GAAG;AA4EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}