{"ast":null,"code":"import '../Css/Applications.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n/*\r\nfunction Applications() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [applications, setApplications] = useState([]);\r\n    const [selectedApplication, setSelectedApplication] = useState(null);\r\n    const [applicationDetail, setApplicationDetail] = useState(null);\r\n    const [showApp, setShowApp] = useState(true);\r\n    \r\n\r\n    const displayApplication = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/applications');\r\n        setApplications(response.data);\r\n        setLoading(false);\r\n    };\r\n\r\n    const chooseApplication = async (application) => {\r\n        setSelectedApplication(application);\r\n        setLoading(true);\r\n        const response = await axios.get(`https://engineering-task.elancoapps.com/api/applications/${application}`);\r\n        setApplicationDetail(response.data);\r\n        setLoading(false);\r\n        setShowApp(false);\r\n    };\r\n\r\n    const goBack = () => {\r\n        setSelectedApplication(null);\r\n        setApplications([]);\r\n        setShowApp(true);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <h1>Applications</h1>\r\n            <button onClick={goBack}>Go Back</button>\r\n            {showApp && (\r\n                <button onClick={displayApplication}>Load Applications</button>\r\n\r\n            )}\r\n            {loading ? <p>Loading...</p> : (\r\n                showApp ? (\r\n                    <ul>\r\n                        {applications.map((application) => (\r\n                            <li key={application}>\r\n                                {application}{' '}\r\n                                <button onClick={() => chooseApplication(application)}>View Details</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <div>\r\n                        <h2>{selectedApplication}</h2>\r\n                        {loading ? <p>Loading...</p> : applicationDetail ? (\r\n                            <pre>{JSON.stringify(applicationDetail, null, 2)}</pre>\r\n                        ) : (\r\n                            <p>Loading application information...</p>\r\n                        )}\r\n\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Applications;\r\n\r\n*/","map":{"version":3,"names":["React","useState","axios"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/Contents/Applications.js"],"sourcesContent":["import '../Css/Applications.css';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n/*\r\nfunction Applications() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [applications, setApplications] = useState([]);\r\n    const [selectedApplication, setSelectedApplication] = useState(null);\r\n    const [applicationDetail, setApplicationDetail] = useState(null);\r\n    const [showApp, setShowApp] = useState(true);\r\n    \r\n\r\n    const displayApplication = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/applications');\r\n        setApplications(response.data);\r\n        setLoading(false);\r\n    };\r\n\r\n    const chooseApplication = async (application) => {\r\n        setSelectedApplication(application);\r\n        setLoading(true);\r\n        const response = await axios.get(`https://engineering-task.elancoapps.com/api/applications/${application}`);\r\n        setApplicationDetail(response.data);\r\n        setLoading(false);\r\n        setShowApp(false);\r\n    };\r\n\r\n    const goBack = () => {\r\n        setSelectedApplication(null);\r\n        setApplications([]);\r\n        setShowApp(true);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <h1>Applications</h1>\r\n            <button onClick={goBack}>Go Back</button>\r\n            {showApp && (\r\n                <button onClick={displayApplication}>Load Applications</button>\r\n\r\n            )}\r\n            {loading ? <p>Loading...</p> : (\r\n                showApp ? (\r\n                    <ul>\r\n                        {applications.map((application) => (\r\n                            <li key={application}>\r\n                                {application}{' '}\r\n                                <button onClick={() => chooseApplication(application)}>View Details</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <div>\r\n                        <h2>{selectedApplication}</h2>\r\n                        {loading ? <p>Loading...</p> : applicationDetail ? (\r\n                            <pre>{JSON.stringify(applicationDetail, null, 2)}</pre>\r\n                        ) : (\r\n                            <p>Loading application information...</p>\r\n                        )}\r\n\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Applications;\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAO,yBAAyB;AAChC,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}