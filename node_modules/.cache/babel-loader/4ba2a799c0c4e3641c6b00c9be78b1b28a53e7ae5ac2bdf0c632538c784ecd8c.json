{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\Contents\\\\Raw.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Raw() {\n  _s();\n  const [data, setData] = useState(null);\n  const [sortType, setSortType] = useState('');\n  const handleButtonClick = async () => {\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\n    setData(response.data);\n  };\n  const handleSortByDate = () => {\n    const sortedData = data.slice().sort((a, b) => {\n      if (sortType === 'asc') {\n        return new Date(a.date) - new Date(b.date);\n      } else if (sortType === 'desc') {\n        return new Date(b.date) - new Date(a.date);\n      } else {\n        return data;\n      }\n    });\n    setData(sortedData);\n    setSortType(sortType === 'asc' ? 'desc' : 'asc');\n  };\n  const handleSortByPrice = () => {\n    const sortedData = data.slice().sort((a, b) => {\n      if (sortType === 'asc') {\n        return a.price - b.price;\n      } else if (sortType === 'desc') {\n        return b.price - a.price;\n      } else {\n        return data;\n      }\n    });\n    setData(sortedData);\n    setSortType(sortType === 'asc' ? 'desc' : 'asc');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Raw Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleButtonClick,\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleSortByDate,\n          children: \"Sort by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleSortByPrice,\n          children: \"Sort by Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Raw, \"OJ8nqV4lymJBnCLS5tsKjZeocFg=\");\n_c = Raw;\nexport default Raw;\n\n/*\r\n const [data, setData] = useState(null);\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {data && (\r\n                <pre>{JSON.stringify(data, null, 2)}</pre>\r\n            )}\r\n        </div>\r\n    );\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Raw\");","map":{"version":3,"names":["React","useState","axios","Raw","data","setData","sortType","setSortType","handleButtonClick","response","get","handleSortByDate","sortedData","slice","sort","a","b","Date","date","handleSortByPrice","price","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/Contents/Raw.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Raw() {\r\n\r\n    const [data, setData] = useState(null);\r\n    const [sortType, setSortType] = useState('');\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    const handleSortByDate = () => {\r\n        const sortedData = data.slice().sort((a, b) => {\r\n            if (sortType === 'asc') {\r\n                return new Date(a.date) - new Date(b.date);\r\n            } else if (sortType === 'desc') {\r\n                return new Date(b.date) - new Date(a.date);\r\n            } else {\r\n                return data;\r\n            }\r\n        });\r\n        setData(sortedData);\r\n        setSortType(sortType === 'asc' ? 'desc' : 'asc');\r\n    };\r\n\r\n    const handleSortByPrice = () => {\r\n        const sortedData = data.slice().sort((a, b) => {\r\n            if (sortType === 'asc') {\r\n                return a.price - b.price;\r\n            } else if (sortType === 'desc') {\r\n                return b.price - a.price;\r\n            } else {\r\n                return data;\r\n            }\r\n        });\r\n        setData(sortedData);\r\n        setSortType(sortType === 'asc' ? 'desc' : 'asc');\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <h1>Raw Data</h1>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {data && (\r\n                <div>\r\n                    <div>\r\n                        <button className='btn' onClick={handleSortByDate}>Sort by Date</button>\r\n                    </div>\r\n                    <div>\r\n                        <button className='btn' onClick={handleSortByPrice}>Sort by Price</button>\r\n                    </div>\r\n                    <pre>{JSON.stringify(data, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Raw;\r\n\r\n\r\n\r\n\r\n/*\r\n const [data, setData] = useState(null);\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {data && (\r\n                <pre>{JSON.stringify(data, null, 2)}</pre>\r\n            )}\r\n        </div>\r\n    );\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}