{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleSearchTermChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleClick = async () => {\n    setIsLoading(true);\n    let url = 'https://engineering-task.elancoapps.com/api/applications';\n    if (searchTerm !== '') {\n      url += `?name=${searchTerm}`;\n    }\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        value: searchTerm,\n        onChange: handleSearchTermChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : data ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter a search term and click the button to load data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gYuRlQxxaZ1ALWYawpCqPosPYBM=\");\n_c = App;\nexport default App;\n\n/*\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://engineering-task.elancoapps.com/api/applications\");\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n\n  return (\n\n    <div>\n      <h1>Applications</h1>\n      <button onClick={handleClick}>Load Data</button>\n      {isLoading ? (\n        <p>Loading data...</p>\n      ) : data ? (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      ) : (\n        <p>Click the button to load data</p>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","data","setData","isLoading","setIsLoading","searchTerm","setSearchTerm","handleSearchTermChange","event","target","value","handleClick","url","response","fetch","json","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleSearchTermChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    let url = 'https://engineering-task.elancoapps.com/api/applications';\n    if (searchTerm !== '') {\n      url += `?name=${searchTerm}`;\n    }\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n\n  return (\n    <div>\n      <h1>Applications</h1>\n      <div>\n        <label htmlFor=\"search\">Search:</label>\n        <input type=\"text\" id=\"search\" value={searchTerm} onChange={handleSearchTermChange} />\n        <button onClick={handleClick}>Search</button>\n      </div>\n      {isLoading ? (\n        <p>Loading data...</p>\n      ) : data ? (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      ) : (\n        <p>Enter a search term and click the button to load data</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n/*\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://engineering-task.elancoapps.com/api/applications\");\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n\n  return (\n\n    <div>\n      <h1>Applications</h1>\n      <button onClick={handleClick}>Load Data</button>\n      {isLoading ? (\n        <p>Loading data...</p>\n      ) : data ? (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      ) : (\n        <p>Click the button to load data</p>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n*/"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAGxC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,sBAAsB,GAAGC,KAAK,IAAI;IACtCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,WAAW,GAAG,YAAY;IAC9BP,YAAY,CAAC,IAAI,CAAC;IAClB,IAAIQ,GAAG,GAAG,0DAA0D;IACpE,IAAIP,UAAU,KAAK,EAAE,EAAE;MACrBO,GAAG,IAAK,SAAQP,UAAW,EAAC;IAC9B;IACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;IAClCb,OAAO,CAACa,IAAI,CAAC;IACbX,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAA,wBACE;QAAO,OAAO,EAAC,QAAQ;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,QAAQ;QAAC,KAAK,EAAEC,UAAW;QAAC,QAAQ,EAAEE;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAG,eACtF;QAAQ,OAAO,EAAEI,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC,EACLR,SAAS,gBACR;MAAA,UAAG;IAAe;MAAA;MAAA;MAAA;IAAA,QAAI,GACpBF,IAAI,gBACN;MAAA,UAAMe,IAAI,CAACC,SAAS,CAAChB,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,gBAE1C;MAAA,UAAG;IAAqD;MAAA;MAAA;MAAA;IAAA,QACzD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAtCQD,GAAG;AAAA,KAAHA,GAAG;AAwCZ,eAAeA,GAAG;;AAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}