{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [applications, setApplications] = useState([]);\n  const [showJson, setShowJson] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/applications').then(response => response.json()).then(data => setApplications(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Applications:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: applications.map(application => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: application.name\n      }, application.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowJson(!showJson),\n      children: showJson ? 'Hide JSON' : 'Show JSON'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), showJson && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(applications, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8cY6Y2HoFWWsc+67SpSZVGYPUQ0=\");\n_c = App;\nexport default App;\n\n//works \n/*\nimport React, { useState } from 'react';\nimport Swagger from 'swagger-client';\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://engineering-task.elancoapps.com/api/applications\");\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n\n  return (\n\n    <div>\n      <h1>Applications</h1>\n      <button onClick={handleClick}>Load Data</button>\n      {isLoading ? (\n        <p>Loading data...</p>\n      ) : data ? (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      ) : (\n        <p>Click the button to load data</p>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","App","applications","setApplications","showJson","setShowJson","fetch","then","response","json","data","map","application","name","id","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\n\n\nfunction App() {\n\n  const [applications, setApplications] = useState([]);\n  const [showJson, setShowJson] = useState(false);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/applications')\n      .then(response => response.json())\n      .then(data => setApplications(data));\n  }, []);\n\n\n\n  return (\n    <div>\n      <h1>Applications:</h1>\n      <ul>\n        {applications.map(application => (\n          <li key={application.id}>{application.name}</li>\n        ))}\n      </ul>\n      <button onClick={() => setShowJson(!showJson)}>\n        {showJson ? 'Hide JSON' : 'Show JSON'}\n      </button>\n      {showJson && <pre>{JSON.stringify(applications, null, 2)}</pre>}\n    </div>\n\n\n  );\n}\n\nexport default App;\n\n\n\n\n\n//works \n/*\nimport React, { useState } from 'react';\nimport Swagger from 'swagger-client';\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://engineering-task.elancoapps.com/api/applications\");\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n\n  return (\n\n    <div>\n      <h1>Applications</h1>\n      <button onClick={handleClick}>Load Data</button>\n      {isLoading ? (\n        <p>Loading data...</p>\n      ) : data ? (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      ) : (\n        <p>Click the button to load data</p>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n*/"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAG5C,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,wCAAwC,CAAC,CAC5CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,eAAe,CAACO,IAAI,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAIN,oBACE;IAAA,wBACE;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAA,UACGR,YAAY,CAACS,GAAG,CAACC,WAAW,iBAC3B;QAAA,UAA0BA,WAAW,CAACC;MAAI,GAAjCD,WAAW,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACxB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MAAQ,OAAO,EAAE,MAAMT,WAAW,CAAC,CAACD,QAAQ,CAAE;MAAA,UAC3CA,QAAQ,GAAG,WAAW,GAAG;IAAW;MAAA;MAAA;MAAA;IAAA,QAC9B,EACRA,QAAQ,iBAAI;MAAA,UAAMW,IAAI,CAACC,SAAS,CAACd,YAAY,EAAE,IAAI,EAAE,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3D;AAIV;AAAC,GA7BQD,GAAG;AAAA,KAAHA,GAAG;AA+BZ,eAAeA,GAAG;;AAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}