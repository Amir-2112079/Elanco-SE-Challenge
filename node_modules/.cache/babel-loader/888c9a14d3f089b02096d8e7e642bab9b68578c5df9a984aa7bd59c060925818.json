{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\Contents\\\\Raw.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Raw() {\n  _s();\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState(null);\n  const handleButtonClick = () => {\n    axios.get('https://engineering-task.elancoapps.com/api/raw').then(response => {\n      setData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleSortByDate = () => {\n    const sortedData = data.sort((a, b) => {\n      return new Date(a.date) - new Date(b.date);\n    });\n    setData([...sortedData]);\n    setSortType('date');\n  };\n  const handleSortByPrice = () => {\n    const sortedData = data.sort((a, b) => {\n      return a.price - b.price;\n    });\n    setData([...sortedData]);\n    setSortType('price');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Raw Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleButtonClick,\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), sortType && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sorted by \", sortType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSortByDate,\n      children: \"Sort by Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSortByPrice,\n      children: \"Sort by Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), data && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Raw, \"M4UHEvIUDX4btoW4/MOZwvkB63M=\");\n_c = Raw;\nexport default Raw;\n\n/*\r\n const [data, setData] = useState(null);\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {data && (\r\n                <pre>{JSON.stringify(data, null, 2)}</pre>\r\n            )}\r\n        </div>\r\n    );\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Raw\");","map":{"version":3,"names":["React","useState","axios","Raw","data","setData","sortType","setSortType","handleButtonClick","get","then","response","catch","error","console","handleSortByDate","sortedData","sort","a","b","Date","date","handleSortByPrice","price","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/Contents/Raw.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Raw() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [sortType, setSortType] = useState(null);\r\n\r\n    const handleButtonClick = () => {\r\n        axios.get('https://engineering-task.elancoapps.com/api/raw')\r\n            .then(response => {\r\n                setData(response.data);\r\n            }).catch(error => {\r\n                console.error(error);\r\n            })\r\n    };\r\n\r\n    const handleSortByDate = () => {\r\n        const sortedData = data.sort((a, b) => {\r\n            return new Date(a.date) - new Date(b.date);\r\n        });\r\n        setData([...sortedData]);\r\n        setSortType('date');\r\n    };\r\n\r\n    const handleSortByPrice = () => {\r\n        const sortedData = data.sort((a, b) => {\r\n            return a.price - b.price;\r\n        });\r\n        setData([...sortedData]);\r\n        setSortType('price');\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <h1>Raw Data</h1>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {sortType && <p>Sorted by {sortType}</p>}\r\n            <button className='btn' onClick={handleSortByDate}>Sort by Date</button>\r\n            <button className='btn' onClick={handleSortByPrice}>Sort by Price</button>\r\n            {data && <pre>{JSON.stringify(data, null, 2)}</pre>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Raw;\r\n\r\n\r\n\r\n\r\n/*\r\n const [data, setData] = useState(null);\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {data && (\r\n                <pre>{JSON.stringify(data, null, 2)}</pre>\r\n            )}\r\n        </div>\r\n    );\r\n*/"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EAEX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMO,iBAAiB,GAAG,MAAM;IAC5BN,KAAK,CAACO,GAAG,CAAC,iDAAiD,CAAC,CACvDC,IAAI,CAACC,QAAQ,IAAI;MACdN,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;IAC1B,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAM;IAC3B,MAAMC,UAAU,GAAGZ,IAAI,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACnC,OAAO,IAAIC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC;IAC9C,CAAC,CAAC;IACFhB,OAAO,CAAC,CAAC,GAAGW,UAAU,CAAC,CAAC;IACxBT,WAAW,CAAC,MAAM,CAAC;EACvB,CAAC;EAED,MAAMe,iBAAiB,GAAG,MAAM;IAC5B,MAAMN,UAAU,GAAGZ,IAAI,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACnC,OAAOD,CAAC,CAACK,KAAK,GAAGJ,CAAC,CAACI,KAAK;IAC5B,CAAC,CAAC;IACFlB,OAAO,CAAC,CAAC,GAAGW,UAAU,CAAC,CAAC;IACxBT,WAAW,CAAC,OAAO,CAAC;EACxB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEC,iBAAkB;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,EACpEF,QAAQ,iBAAI;MAAA,WAAG,YAAU,EAACA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACxC;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAES,gBAAiB;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS,eACxE;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEO,iBAAkB;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,EACzElB,IAAI,iBAAI;MAAA,UAAMoB,IAAI,CAACC,SAAS,CAACrB,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAEd;AAAC,GAxCQD,GAAG;AAAA,KAAHA,GAAG;AA0CZ,eAAeA,GAAG;;AAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}