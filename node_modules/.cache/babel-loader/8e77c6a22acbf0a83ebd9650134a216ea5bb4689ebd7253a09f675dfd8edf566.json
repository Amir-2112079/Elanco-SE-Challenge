{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Applications from './Contents/Applications';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [applications, setApplications] = useState([]);\n  const [selectedApplication, setSelectedApplication] = useState(null);\n  const [applicationInfo, setApplicationInfo] = useState(null);\n  const loadApplications = async () => {\n    setIsLoading(true);\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/applications');\n    setApplications(response.data);\n    setIsLoading(false);\n  };\n  const selectApplication = async application => {\n    setSelectedApplication(application);\n    setIsLoading(true);\n    const response = await axios.get(`https://engineering-task.elancoapps.com/api/applications/${application}`);\n    setApplicationInfo(response.data);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadApplications,\n      children: \"Load Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: applications.map(application => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [application, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => selectApplication(application),\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, application, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), selectedApplication && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedApplication\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }, this) : applicationInfo ? /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(applicationInfo, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading application information...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vn5cujy6w0brv2pyLFmv4iwAd5U=\");\n_c = App;\nexport default App;\n\n//This one allows to also view the details \n/*\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [applications, setApplications] = useState([]);\n  const [selectedApplication, setSelectedApplication] = useState(null);\n  const [applicationInfo, setApplicationInfo] = useState(null);\n\n  const loadApplications = async () => {\n    setIsLoading(true);\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/applications');\n    setApplications(response.data);\n    setIsLoading(false);\n  };\n\n  const selectApplication = (application) => {\n    setSelectedApplication(application);\n  };\n\n  const loadApplicationInfo = async () => {\n    setIsLoading(true);\n    const response = await axios.get(`https://engineering-task.elancoapps.com/api/applications/${selectedApplication}`);\n    setApplicationInfo(response.data);\n    setIsLoading(false);\n  };\n\n  return (\n    <div>\n      <h1>Applications</h1>\n      <button onClick={loadApplications}>Load Applications</button>\n      {isLoading ? <p>Loading...</p> : (\n        <ul>\n          {applications.map((application) => (\n            <li key={application}>{application} <button onClick={() => selectApplication(application)}>View Details</button></li>\n          ))}\n        </ul>\n      )}\n      {selectedApplication && (\n        <div>\n          <h2>{selectedApplication}</h2>\n          <button onClick={loadApplicationInfo}>View Details</button>\n          {isLoading ? <p>Loading...</p> : applicationInfo ? (\n            <pre>{JSON.stringify(applicationInfo, null, 2)}</pre>\n          ) : (\n            <p>Click \"View Details\" to load application information.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n*/\n\n/*\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://engineering-task.elancoapps.com/api/applications\");\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n\n  return (\n\n    <div>\n      <h1>Applications</h1>\n      <button onClick={handleClick}>Load Data</button>\n      {isLoading ? (\n        <p>Loading data...</p>\n      ) : data ? (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      ) : (\n        <p>Click the button to load data</p>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Applications","React","useState","axios","App","isLoading","setIsLoading","applications","setApplications","selectedApplication","setSelectedApplication","applicationInfo","setApplicationInfo","loadApplications","response","get","data","selectApplication","application","map","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/App.js"],"sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Routes, Route, } from 'react-router-dom';\nimport Applications from './Contents/Applications';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [applications, setApplications] = useState([]);\n  const [selectedApplication, setSelectedApplication] = useState(null);\n  const [applicationInfo, setApplicationInfo] = useState(null);\n\n  const loadApplications = async () => {\n    setIsLoading(true);\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/applications');\n    setApplications(response.data);\n    setIsLoading(false);\n  };\n\n  const selectApplication = async (application) => {\n    setSelectedApplication(application);\n    setIsLoading(true);\n    const response = await axios.get(`https://engineering-task.elancoapps.com/api/applications/${application}`);\n    setApplicationInfo(response.data);\n    setIsLoading(false);\n  };\n\n  return (\n    <div>\n      <h1>Applications</h1>\n      <button onClick={loadApplications}>Load Applications</button>\n      {isLoading ? <p>Loading...</p> : (\n        <ul>\n          {applications.map((application) => (\n            <li key={application}>\n              {application}{' '}\n              <button onClick={() => selectApplication(application)}>View Details</button>\n            </li>\n          ))}\n        </ul>\n      )}\n      {selectedApplication && (\n        <div>\n          <h2>{selectedApplication}</h2>\n          {isLoading ? <p>Loading...</p> : applicationInfo ? (\n            <pre>{JSON.stringify(applicationInfo, null, 2)}</pre>\n          ) : (\n            <p>Loading application information...</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n//This one allows to also view the details \n/*\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [applications, setApplications] = useState([]);\n  const [selectedApplication, setSelectedApplication] = useState(null);\n  const [applicationInfo, setApplicationInfo] = useState(null);\n\n  const loadApplications = async () => {\n    setIsLoading(true);\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/applications');\n    setApplications(response.data);\n    setIsLoading(false);\n  };\n\n  const selectApplication = (application) => {\n    setSelectedApplication(application);\n  };\n\n  const loadApplicationInfo = async () => {\n    setIsLoading(true);\n    const response = await axios.get(`https://engineering-task.elancoapps.com/api/applications/${selectedApplication}`);\n    setApplicationInfo(response.data);\n    setIsLoading(false);\n  };\n\n  return (\n    <div>\n      <h1>Applications</h1>\n      <button onClick={loadApplications}>Load Applications</button>\n      {isLoading ? <p>Loading...</p> : (\n        <ul>\n          {applications.map((application) => (\n            <li key={application}>{application} <button onClick={() => selectApplication(application)}>View Details</button></li>\n          ))}\n        </ul>\n      )}\n      {selectedApplication && (\n        <div>\n          <h2>{selectedApplication}</h2>\n          <button onClick={loadApplicationInfo}>View Details</button>\n          {isLoading ? <p>Loading...</p> : applicationInfo ? (\n            <pre>{JSON.stringify(applicationInfo, null, 2)}</pre>\n          ) : (\n            <p>Click \"View Details\" to load application information.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n*/\n\n\n\n\n/*\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://engineering-task.elancoapps.com/api/applications\");\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n\n  return (\n\n    <div>\n      <h1>Applications</h1>\n      <button onClick={handleClick}>Load Data</button>\n      {isLoading ? (\n        <p>Loading data...</p>\n      ) : data ? (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      ) : (\n        <p>Click the button to load data</p>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n*/"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAS,kBAAkB;AAC1E,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAI1B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMW,gBAAgB,GAAG,YAAY;IACnCP,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,0DAA0D,CAAC;IAC5FP,eAAe,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC9BV,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMW,iBAAiB,GAAG,MAAOC,WAAW,IAAK;IAC/CR,sBAAsB,CAACQ,WAAW,CAAC;IACnCZ,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,4DAA2DG,WAAY,EAAC,CAAC;IAC3GN,kBAAkB,CAACE,QAAQ,CAACE,IAAI,CAAC;IACjCV,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAQ,OAAO,EAAEO,gBAAiB;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAS,EAC5DR,SAAS,gBAAG;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAI,gBAC5B;MAAA,UACGE,YAAY,CAACY,GAAG,CAAED,WAAW,iBAC5B;QAAA,WACGA,WAAW,EAAE,GAAG,eACjB;UAAQ,OAAO,EAAE,MAAMD,iBAAiB,CAACC,WAAW,CAAE;UAAA,UAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GAFrEA,WAAW;QAAA;QAAA;QAAA;MAAA,QAIrB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL,EACAT,mBAAmB,iBAClB;MAAA,wBACE;QAAA,UAAKA;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAM,EAC7BJ,SAAS,gBAAG;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI,GAAGM,eAAe,gBAC9C;QAAA,UAAMS,IAAI,CAACC,SAAS,CAACV,eAAe,EAAE,IAAI,EAAE,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO,gBAErD;QAAA,UAAG;MAAkC;QAAA;QAAA;QAAA;MAAA,QACtC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA/CQP,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;;AAOlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}