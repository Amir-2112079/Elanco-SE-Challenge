{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\Contents\\\\Raw.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Raw() {\n  _s();\n  const [data, setData] = useState(null);\n  const [sortedData, setSortedData] = useState(null);\n  const [sortCriteria, setSortCriteria] = useState(null);\n  const handleButtonClick = async () => {\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\n    setData(response.data);\n  };\n  const handleSortChange = event => {\n    const value = event.target.value;\n    setSortCriteria(value);\n    if (value === 'date') {\n      setSortedData([...data].sort((a, b) => new Date(a.date) - new Date(b.date)));\n    } else if (value === 'name') {\n      setSortedData([...data].sort((a, b) => a.name.localeCompare(b.name)));\n    } else if (value === 'price') {\n      setSortedData([...data].sort((a, b) => a.price - b.price));\n    }\n  };\n  const handleDateChange = event => {\n    const value = event.target.value;\n    if (value) {\n      const filteredData = data.filter(item => item.date === value);\n      setSortedData(filteredData);\n    } else {\n      setSortedData([...data]);\n    }\n  };\n  useEffect(() => {\n    if (data && sortCriteria) {\n      handleSortChange({\n        target: {\n          value: sortCriteria\n        }\n      });\n    }\n  }, [data, sortCriteria]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleButtonClick,\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort-select\",\n        children: \"Sort by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort-select\",\n        value: sortCriteria,\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Criteria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), sortedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date-input\",\n        children: \"Filter by Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date-input\",\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(sortedData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Raw, \"Q4qwlJB6eBQGF0E/dNsXpLUr928=\");\n_c = Raw;\nexport default Raw;\n\n/*\r\n const [data, setData] = useState(null);\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {data && (\r\n                <pre>{JSON.stringify(data, null, 2)}</pre>\r\n            )}\r\n        </div>\r\n    );\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Raw\");","map":{"version":3,"names":["React","useState","useEffect","axios","Raw","data","setData","sortedData","setSortedData","sortCriteria","setSortCriteria","handleButtonClick","response","get","handleSortChange","event","value","target","sort","a","b","Date","date","name","localeCompare","price","handleDateChange","filteredData","filter","item","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/Contents/Raw.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Raw() {\r\n    const [data, setData] = useState(null);\r\n    const [sortedData, setSortedData] = useState(null);\r\n    const [sortCriteria, setSortCriteria] = useState(null);\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    const handleSortChange = (event) => {\r\n        const value = event.target.value;\r\n        setSortCriteria(value);\r\n        if (value === 'date') {\r\n            setSortedData([...data].sort((a, b) => new Date(a.date) - new Date(b.date)));\r\n        } else if (value === 'name') {\r\n            setSortedData([...data].sort((a, b) => a.name.localeCompare(b.name)));\r\n        } else if (value === 'price') {\r\n            setSortedData([...data].sort((a, b) => a.price - b.price));\r\n        }\r\n    };\r\n\r\n    const handleDateChange = (event) => {\r\n        const value = event.target.value;\r\n        if (value) {\r\n            const filteredData = data.filter((item) => item.date === value);\r\n            setSortedData(filteredData);\r\n        } else {\r\n            setSortedData([...data]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data && sortCriteria) {\r\n            handleSortChange({ target: { value: sortCriteria } });\r\n        }\r\n    }, [data, sortCriteria]);\r\n\r\n    return (\r\n        <div>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            <div>\r\n                <label htmlFor=\"sort-select\">Sort by:</label>\r\n                <select id=\"sort-select\" value={sortCriteria} onChange={handleSortChange}>\r\n                    <option value=\"\">Select Criteria</option>\r\n                    <option value=\"date\">Date</option>\r\n                    <option value=\"name\">Name</option>\r\n                    <option value=\"price\">Price</option>\r\n                </select>\r\n            </div>\r\n            {sortedData && (\r\n                <div>\r\n                    <label htmlFor=\"date-input\">Filter by Date:</label>\r\n                    <input type=\"date\" id=\"date-input\" onChange={handleDateChange} />\r\n                    <pre>{JSON.stringify(sortedData, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Raw;\r\n\r\n\r\n\r\n\r\n/*\r\n const [data, setData] = useState(null);\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {data && (\r\n                <pre>{JSON.stringify(data, null, 2)}</pre>\r\n            )}\r\n        </div>\r\n    );\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}