{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\Contents\\\\Raw.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Raw() {\n  _s();\n  const [data, setData] = useState(null);\n  const [sortedData, setSortedData] = useState(null);\n  const handleButtonClick = () => {\n    axios.get('https://engineering-task.elancoapps.com/api/raw').then(response => {\n      setData(response.data);\n      setSortedData(response.data);\n    }).catch(error => {});\n  };\n  const handleSortByDate = () => {\n    if (sortedData) {\n      const sorted = [...sortedData].sort((a, b) => {\n        return new Date(b.date) - new Date(a.date);\n      });\n      setSortedData(sorted);\n    }\n  };\n  const handleSortByPrice = () => {\n    if (sortedData) {\n      const sorted = [...sortedData].sort((a, b) => {\n        return b.price - a.price;\n      });\n      setSortedData(sorted);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Raw Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleButtonClick,\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleSortByDate,\n        children: \"Sort by Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleSortByPrice,\n        children: \"Sort by Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), sortedData ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(sortedData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Raw, \"cCnmTSFQJW+1s2OOTeWaxtJxDyo=\");\n_c = Raw;\nexport default Raw;\n\n/*\r\n const [data, setData] = useState(null);\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {data && (\r\n                <pre>{JSON.stringify(data, null, 2)}</pre>\r\n            )}\r\n        </div>\r\n    );\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Raw\");","map":{"version":3,"names":["React","useState","axios","Raw","data","setData","sortedData","setSortedData","handleButtonClick","get","then","response","catch","error","handleSortByDate","sorted","sort","a","b","Date","date","handleSortByPrice","price","JSON","stringify"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/Contents/Raw.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Raw() {\r\n    const [data, setData] = useState(null);\r\n    const [sortedData, setSortedData] = useState(null);\r\n\r\n    const handleButtonClick = () => {\r\n        axios\r\n            .get('https://engineering-task.elancoapps.com/api/raw')\r\n            .then(response => {\r\n                setData(response.data);\r\n                setSortedData(response.data);\r\n            })\r\n            .catch(error => { });\r\n    };\r\n\r\n    const handleSortByDate = () => {\r\n        if (sortedData) {\r\n            const sorted = [...sortedData].sort((a, b) => {\r\n                return new Date(b.date) - new Date(a.date);\r\n            });\r\n            setSortedData(sorted);\r\n        }\r\n    };\r\n\r\n    const handleSortByPrice = () => {\r\n        if (sortedData) {\r\n            const sorted = [...sortedData].sort((a, b) => {\r\n                return b.price - a.price;\r\n            });\r\n            setSortedData(sorted);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Raw Data</h1>\r\n            <button className=\"btn\" onClick={handleButtonClick}>\r\n                Get Data\r\n            </button>\r\n            <div>\r\n                <button className=\"btn\" onClick={handleSortByDate}>\r\n                    Sort by Date\r\n                </button>\r\n                <button className=\"btn\" onClick={handleSortByPrice}>\r\n                    Sort by Price\r\n                </button>\r\n            </div>\r\n            {sortedData ? (\r\n                <pre>{JSON.stringify(sortedData, null, 2)}</pre>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Raw;\r\n\r\n\r\n\r\n\r\n/*\r\n const [data, setData] = useState(null);\r\n\r\n    const handleButtonClick = async () => {\r\n        const response = await axios.get('https://engineering-task.elancoapps.com/api/raw');\r\n        setData(response.data);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <button className='btn' onClick={handleButtonClick}>Get Data</button>\r\n            {data && (\r\n                <pre>{JSON.stringify(data, null, 2)}</pre>\r\n            )}\r\n        </div>\r\n    );\r\n*/"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMO,iBAAiB,GAAG,MAAM;IAC5BN,KAAK,CACAO,GAAG,CAAC,iDAAiD,CAAC,CACtDC,IAAI,CAACC,QAAQ,IAAI;MACdN,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;MACtBG,aAAa,CAACI,QAAQ,CAACP,IAAI,CAAC;IAChC,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI,CAAE,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC3B,IAAIR,UAAU,EAAE;MACZ,MAAMS,MAAM,GAAG,CAAC,GAAGT,UAAU,CAAC,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC1C,OAAO,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC;MAC9C,CAAC,CAAC;MACFb,aAAa,CAACQ,MAAM,CAAC;IACzB;EACJ,CAAC;EAED,MAAMM,iBAAiB,GAAG,MAAM;IAC5B,IAAIf,UAAU,EAAE;MACZ,MAAMS,MAAM,GAAG,CAAC,GAAGT,UAAU,CAAC,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC1C,OAAOA,CAAC,CAACI,KAAK,GAAGL,CAAC,CAACK,KAAK;MAC5B,CAAC,CAAC;MACFf,aAAa,CAACQ,MAAM,CAAC;IACzB;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEP,iBAAkB;MAAA,UAAC;IAEpD;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,wBACI;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAEM,gBAAiB;QAAA,UAAC;MAEnD;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAEO,iBAAkB;QAAA,UAAC;MAEpD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,EACLf,UAAU,gBACP;MAAA,UAAMiB,IAAI,CAACC,SAAS,CAAClB,UAAU,EAAE,IAAI,EAAE,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,GAChD,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAGd;AAAC,GApDQH,GAAG;AAAA,KAAHA,GAAG;AAsDZ,eAAeA,GAAG;;AAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}