{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement Tests\\\\Elanco-Task\\\\api-test\\\\src\\\\App.js\";\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Applications from './Contents/Applications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n//This one allows to also view the details \n/*\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [applications, setApplications] = useState([]);\n  const [selectedApplication, setSelectedApplication] = useState(null);\n  const [applicationInfo, setApplicationInfo] = useState(null);\n\n  const loadApplications = async () => {\n    setIsLoading(true);\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/applications');\n    setApplications(response.data);\n    setIsLoading(false);\n  };\n\n  const selectApplication = (application) => {\n    setSelectedApplication(application);\n  };\n\n  const loadApplicationInfo = async () => {\n    setIsLoading(true);\n    const response = await axios.get(`https://engineering-task.elancoapps.com/api/applications/${selectedApplication}`);\n    setApplicationInfo(response.data);\n    setIsLoading(false);\n  };\n\n  return (\n    <div>\n      <h1>Applications</h1>\n      <button onClick={loadApplications}>Load Applications</button>\n      {isLoading ? <p>Loading...</p> : (\n        <ul>\n          {applications.map((application) => (\n            <li key={application}>{application} <button onClick={() => selectApplication(application)}>View Details</button></li>\n          ))}\n        </ul>\n      )}\n      {selectedApplication && (\n        <div>\n          <h2>{selectedApplication}</h2>\n          <button onClick={loadApplicationInfo}>View Details</button>\n          {isLoading ? <p>Loading...</p> : applicationInfo ? (\n            <pre>{JSON.stringify(applicationInfo, null, 2)}</pre>\n          ) : (\n            <p>Click \"View Details\" to load application information.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n*/\n\n/*\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://engineering-task.elancoapps.com/api/applications\");\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n\n  return (\n\n    <div>\n      <h1>Applications</h1>\n      <button onClick={handleClick}>Load Data</button>\n      {isLoading ? (\n        <p>Loading data...</p>\n      ) : data ? (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      ) : (\n        <p>Click the button to load data</p>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Applications","App"],"sources":["E:/Placement Tests/Elanco-Task/api-test/src/App.js"],"sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Routes, Route, } from 'react-router-dom';\nimport Applications from './Contents/Applications';\n\n\n\n\nfunction App() {\n\n\n  return (\n\n    <div>\n\n    </div>\n\n\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n//This one allows to also view the details \n/*\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [applications, setApplications] = useState([]);\n  const [selectedApplication, setSelectedApplication] = useState(null);\n  const [applicationInfo, setApplicationInfo] = useState(null);\n\n  const loadApplications = async () => {\n    setIsLoading(true);\n    const response = await axios.get('https://engineering-task.elancoapps.com/api/applications');\n    setApplications(response.data);\n    setIsLoading(false);\n  };\n\n  const selectApplication = (application) => {\n    setSelectedApplication(application);\n  };\n\n  const loadApplicationInfo = async () => {\n    setIsLoading(true);\n    const response = await axios.get(`https://engineering-task.elancoapps.com/api/applications/${selectedApplication}`);\n    setApplicationInfo(response.data);\n    setIsLoading(false);\n  };\n\n  return (\n    <div>\n      <h1>Applications</h1>\n      <button onClick={loadApplications}>Load Applications</button>\n      {isLoading ? <p>Loading...</p> : (\n        <ul>\n          {applications.map((application) => (\n            <li key={application}>{application} <button onClick={() => selectApplication(application)}>View Details</button></li>\n          ))}\n        </ul>\n      )}\n      {selectedApplication && (\n        <div>\n          <h2>{selectedApplication}</h2>\n          <button onClick={loadApplicationInfo}>View Details</button>\n          {isLoading ? <p>Loading...</p> : applicationInfo ? (\n            <pre>{JSON.stringify(applicationInfo, null, 2)}</pre>\n          ) : (\n            <p>Click \"View Details\" to load application information.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n*/\n\n\n\n\n/*\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://engineering-task.elancoapps.com/api/applications\");\n    const json = await response.json();\n    setData(json);\n    setIsLoading(false);\n  };\n\n  return (\n\n    <div>\n      <h1>Applications</h1>\n      <button onClick={handleClick}>Load Data</button>\n      {isLoading ? (\n        <p>Loading data...</p>\n      ) : data ? (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      ) : (\n        <p>Click the button to load data</p>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n*/"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAS,kBAAkB;AAC1E,OAAOC,YAAY,MAAM,yBAAyB;AAAC;AAKnD,SAASC,GAAG,GAAG;EAGb,oBAEE;IAAA;IAAA;IAAA;EAAA,QAEM;AAIV;AAAC,KAXQA,GAAG;AAaZ,eAAeA,GAAG;;AAOlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}